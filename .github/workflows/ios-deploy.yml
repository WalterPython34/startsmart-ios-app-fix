name: iOS Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - run: npm install
    - run: npm run build
    - run: npx cap add ios
    - run: npx cap sync ios
    
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        working-directory: ios/App
        
    - name: Setup Fastlane
      run: |
        cd ios/App
        cat > Gemfile << 'EOF'
        source "https://rubygems.org"
        gem "fastlane"
        gem "cocoapods"
        EOF
        
        mkdir -p fastlane
        cat > fastlane/Fastfile << 'EOF'
        default_platform(:ios)
        platform :ios do
          lane :beta do
            build_app(workspace: "App.xcworkspace", scheme: "App", configuration: "Release", export_method: "app-store")
            upload_to_testflight(api_key: { key_id: ENV["APP_STORE_CONNECT_API_KEY_ID"], issuer_id: ENV["APP_STORE_CONNECT_ISSUER_ID"], key_filepath: ENV["APP_STORE_CONNECT_API_KEY_PATH"] }, skip_waiting_for_build_processing: true)
          end
        end
        EOF
        
        cat > fastlane/Appfile << 'EOF'
        app_identifier("ai.nextax.startsmart")
        apple_id("morellosteve@gmail.com")
        EOF
        
        bundle install
        
    - name: Deploy
      run: |
        mkdir -p ~/private_keys
        echo "${{ secrets.APP_STORE_CONNECT_API_KEY }}" | base64 --decode > ~/private_keys/AuthKey_${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}.p8
        cd ios/App
        bundle exec fastlane ios beta
      env:
        APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
        APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
        APP_STORE_CONNECT_API_KEY_PATH: ~/private_keys/AuthKey_${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}.p8
        TEAM_ID: ${{ secrets.TEAM_ID }}
